name: Create PAYDAY mod release
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: Delete Existing Release
      uses: ame-yu/action-delete-latest-release@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Archive Mod
      run: |
         .\.github\7za.exe -tzip a ".\pd2rpd.zip" ".\Rich Presence Definitive"
      shell: powershell
    - name: Create New Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          This release zip is automatically updated on every push. You can ignore the "x commits behind" message.
    - name: Upload Mod Zip to Release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./pd2rpd.zip
        asset_name: pd2rpd.zip
        asset_content_type: application/zip
    - name: JSON to variables
      # see https://github.com/antifree/json-to-variables
      # You may pin to the exact commit or the version.
      # uses: antifree/json-to-variables@cc8c6394031e145c90f7f9ec909d83df92431fb8
      uses: antifree/json-to-variables@v1.0.1
      with:
        # The json file.
        filename: "./Rich Presence Definitive/mod.txt"
        # The prefix for variables.
        prefix: "mod"
    - name: Update version number in meta file
      id: create_meta_file_v2
      run: |
        $(cat .\.github\meta.json).Replace("%VERSION%", ${{ env.mod_version }}) > ./meta.json
    - name: Upload meta file to Release
      id: upload-meta-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./meta.json
        asset_name: meta.json
        asset_content_type: application/json
